name: Frontend CI/CD

on:
  push:
    branches:
      - master
    paths:
      - 'frontend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Azure CLI Login
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3️⃣ Login to ACR
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # 4️⃣ Build image with a unique tag (commit SHA)
      - name: Build frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:${{ github.sha }} .
          docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:${{ github.sha }} \
            ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:latest

      # 5️⃣ Push both tags (commit-based + latest)
      - name: Push frontend image
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:latest

      # 6️⃣ Set up kubectl with AKS credentials
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          subscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 7️⃣ Deploy to AKS (Create if missing)
      - name: Deploy frontend to AKS
        run: |
          if kubectl get deployment frontend >/dev/null 2>&1; then
            echo "Updating existing deployment..."
            kubectl set image deployment/frontend \
              frontend=${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:${{ github.sha }} -n default
          else
            echo "Deployment not found — creating..."
            kubectl apply -f k8s/frontend-deployment.yaml
            kubectl set image deployment/frontend \
              frontend=${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-app:${{ github.sha }} -n default
          fi
          kubectl rollout status deployment/frontend -n default --timeout=120s
